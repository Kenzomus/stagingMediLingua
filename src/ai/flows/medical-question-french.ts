// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A medical question answering AI agent that answers medical questions in French.
 *
 * - medicalQuestionFrench - A function that handles medical questions in French.
 * - MedicalQuestionFrenchInput - The input type for the medicalQuestionFrench function.
 * - MedicalQuestionFrenchOutput - The return type for the medicalQuestionFrench function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MedicalQuestionFrenchInputSchema = z.object({
  question: z.string().describe('The medical question in French.'),
});
export type MedicalQuestionFrenchInput = z.infer<typeof MedicalQuestionFrenchInputSchema>;

const MedicalQuestionFrenchOutputSchema = z.object({
  answer: z.string().describe('The answer to the medical question in French.'),
});
export type MedicalQuestionFrenchOutput = z.infer<typeof MedicalQuestionFrenchOutputSchema>;

export async function medicalQuestionFrench(input: MedicalQuestionFrenchInput): Promise<MedicalQuestionFrenchOutput> {
  return medicalQuestionFrenchFlow(input);
}

const prompt = ai.definePrompt({
  name: 'medicalQuestionFrenchPrompt',
  input: {schema: MedicalQuestionFrenchInputSchema},
  output: {schema: MedicalQuestionFrenchOutputSchema},
  prompt: `Tu es un chatbot médical qui répond aux questions médicales en français. Réponds à la question suivante de manière précise et concise.\n\nQuestion: {{{question}}}`,
});

const medicalQuestionFrenchFlow = ai.defineFlow(
  {
    name: 'medicalQuestionFrenchFlow',
    inputSchema: MedicalQuestionFrenchInputSchema,
    outputSchema: MedicalQuestionFrenchOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
