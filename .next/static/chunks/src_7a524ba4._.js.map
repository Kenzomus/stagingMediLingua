{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/hooks/use-audio-recorder.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useCallback } from 'react';\nimport { useToast } from './use-toast';\n\nexport function useAudioRecorder() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioDataUri, setAudioDataUri] = useState<string | null>(null);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n  const { toast } = useToast();\n\n  const startRecording = useCallback(async () => {\n    if (isRecording) return;\n\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm;codecs=opus' });\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          setAudioDataUri(reader.result as string);\n        };\n        reader.readAsDataURL(audioBlob);\n        \n        // Stop microphone tracks\n        stream.getTracks().forEach(track => track.stop());\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      setAudioDataUri(null); // Reset previous audio data\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      toast({\n        title: 'Recording Error',\n        description: 'Could not start audio recording. Please check microphone permissions.',\n        variant: 'destructive',\n      });\n      setIsRecording(false); // Ensure isRecording is false if start fails\n    }\n  }, [isRecording, toast]);\n\n  const stopRecording = useCallback(() => {\n    if (!isRecording || !mediaRecorderRef.current) return;\n\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  }, [isRecording]);\n\n  const resetRecording = useCallback(() => {\n    setAudioDataUri(null);\n    audioChunksRef.current = [];\n    if (isRecording) {\n        stopRecording();\n    }\n  }, [isRecording, stopRecording]);\n\n  return { isRecording, startRecording, stopRecording, audioDataUri, resetRecording };\n}\n"],"names":[],"mappings":";;;AAEA;AACA;;AAHA;;;AAKO,SAAS;;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAwB;IACtD,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAU,EAAE;IACxC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE;YACjC,IAAI,aAAa;YAEjB,IAAI;gBACF,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;oBAAE,OAAO;gBAAK;gBACvE,iBAAiB,OAAO,GAAG,IAAI,cAAc;gBAC7C,eAAe,OAAO,GAAG,EAAE;gBAE3B,iBAAiB,OAAO,CAAC,eAAe;oEAAG,CAAC;wBAC1C,eAAe,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI;oBACxC;;gBAEA,iBAAiB,OAAO,CAAC,MAAM;oEAAG;wBAChC,MAAM,YAAY,IAAI,KAAK,eAAe,OAAO,EAAE;4BAAE,MAAM;wBAAyB;wBACpF,MAAM,SAAS,IAAI;wBACnB,OAAO,SAAS;4EAAG;gCACjB,gBAAgB,OAAO,MAAM;4BAC/B;;wBACA,OAAO,aAAa,CAAC;wBAErB,yBAAyB;wBACzB,OAAO,SAAS,GAAG,OAAO;4EAAC,CAAA,QAAS,MAAM,IAAI;;oBAChD;;gBAEA,iBAAiB,OAAO,CAAC,KAAK;gBAC9B,eAAe;gBACf,gBAAgB,OAAO,4BAA4B;YACrD,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,SAAS;gBACX;gBACA,eAAe,QAAQ,6CAA6C;YACtE;QACF;uDAAG;QAAC;QAAa;KAAM;IAEvB,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE;YAChC,IAAI,CAAC,eAAe,CAAC,iBAAiB,OAAO,EAAE;YAE/C,iBAAiB,OAAO,CAAC,IAAI;YAC7B,eAAe;QACjB;sDAAG;QAAC;KAAY;IAEhB,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE;YACjC,gBAAgB;YAChB,eAAe,OAAO,GAAG,EAAE;YAC3B,IAAI,aAAa;gBACb;YACJ;QACF;uDAAG;QAAC;QAAa;KAAc;IAE/B,OAAO;QAAE;QAAa;QAAgB;QAAe;QAAc;IAAe;AACpF;GA7DgB;;QAKI,+HAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/hooks/use-speech-synthesis.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\n\ninterface SpeechSynthesisHook {\n  speak: (text: string, lang: string) => void;\n  cancel: () => void;\n  isSpeaking: boolean;\n  isSupported: (lang: string) => boolean;\n  supportedVoices: SpeechSynthesisVoice[];\n}\n\nexport function useSpeechSynthesis(): SpeechSynthesisHook {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [supportedVoices, setSupportedVoices] = useState<SpeechSynthesisVoice[]>([]);\n\n  useEffect(() => {\n    const loadVoices = () => {\n      const voices = window.speechSynthesis.getVoices();\n      setSupportedVoices(voices);\n    };\n\n    // Voices might not be loaded immediately.\n    loadVoices();\n    window.speechSynthesis.onvoiceschanged = loadVoices;\n\n    return () => {\n      window.speechSynthesis.onvoiceschanged = null;\n      // Ensure any ongoing speech is cancelled when component unmounts\n      if (window.speechSynthesis.speaking) {\n        window.speechSynthesis.cancel();\n      }\n    };\n  }, []);\n  \n  const isSupported = useCallback((lang: string): boolean => {\n    if (typeof window === 'undefined' || !window.speechSynthesis) {\n      return false;\n    }\n    // A basic check, actual language support might be more nuanced.\n    // For Wolof ('wo'), it's highly unlikely to be supported natively.\n    if (lang.toLowerCase() === 'wo') return false; \n    \n    return supportedVoices.some(voice => voice.lang.startsWith(lang));\n  }, [supportedVoices]);\n\n\n  const speak = useCallback((text: string, lang: string) => {\n    if (typeof window === 'undefined' || !window.speechSynthesis) {\n      console.warn('Speech synthesis not supported.');\n      return;\n    }\n\n    if (isSpeaking) {\n      window.speechSynthesis.cancel(); // Cancel current speech before starting new one\n    }\n    \n    const utterance = new SpeechSynthesisUtterance(text);\n    \n    // Try to find a voice for the specified language\n    const voice = supportedVoices.find(v => v.lang.startsWith(lang));\n    if (voice) {\n      utterance.voice = voice;\n    } else {\n      // Fallback if specific language voice not found, browser might pick default\n      utterance.lang = lang; \n    }\n    \n    utterance.onstart = () => setIsSpeaking(true);\n    utterance.onend = () => setIsSpeaking(false);\n    utterance.onerror = (event) => {\n      console.error('Speech synthesis error:', event);\n      setIsSpeaking(false);\n    };\n    \n    window.speechSynthesis.speak(utterance);\n  }, [isSpeaking, supportedVoices]);\n\n  const cancel = useCallback(() => {\n    if (typeof window !== 'undefined' && window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n      setIsSpeaking(false);\n    }\n  }, []);\n\n  return { speak, cancel, isSpeaking, isSupported, supportedVoices };\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAYO,SAAS;;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B,EAAE;IAEjF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,MAAM;2DAAa;oBACjB,MAAM,SAAS,OAAO,eAAe,CAAC,SAAS;oBAC/C,mBAAmB;gBACrB;;YAEA,0CAA0C;YAC1C;YACA,OAAO,eAAe,CAAC,eAAe,GAAG;YAEzC;gDAAO;oBACL,OAAO,eAAe,CAAC,eAAe,GAAG;oBACzC,iEAAiE;oBACjE,IAAI,OAAO,eAAe,CAAC,QAAQ,EAAE;wBACnC,OAAO,eAAe,CAAC,MAAM;oBAC/B;gBACF;;QACF;uCAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE,CAAC;YAC/B,IAAI,aAAkB,eAAe,CAAC,OAAO,eAAe,EAAE;gBAC5D,OAAO;YACT;YACA,gEAAgE;YAChE,mEAAmE;YACnE,IAAI,KAAK,WAAW,OAAO,MAAM,OAAO;YAExC,OAAO,gBAAgB,IAAI;+DAAC,CAAA,QAAS,MAAM,IAAI,CAAC,UAAU,CAAC;;QAC7D;sDAAG;QAAC;KAAgB;IAGpB,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE,CAAC,MAAc;YACvC,IAAI,aAAkB,eAAe,CAAC,OAAO,eAAe,EAAE;gBAC5D,QAAQ,IAAI,CAAC;gBACb;YACF;YAEA,IAAI,YAAY;gBACd,OAAO,eAAe,CAAC,MAAM,IAAI,gDAAgD;YACnF;YAEA,MAAM,YAAY,IAAI,yBAAyB;YAE/C,iDAAiD;YACjD,MAAM,QAAQ,gBAAgB,IAAI;+DAAC,CAAA,IAAK,EAAE,IAAI,CAAC,UAAU,CAAC;;YAC1D,IAAI,OAAO;gBACT,UAAU,KAAK,GAAG;YACpB,OAAO;gBACL,4EAA4E;gBAC5E,UAAU,IAAI,GAAG;YACnB;YAEA,UAAU,OAAO;yDAAG,IAAM,cAAc;;YACxC,UAAU,KAAK;yDAAG,IAAM,cAAc;;YACtC,UAAU,OAAO;yDAAG,CAAC;oBACnB,QAAQ,KAAK,CAAC,2BAA2B;oBACzC,cAAc;gBAChB;;YAEA,OAAO,eAAe,CAAC,KAAK,CAAC;QAC/B;gDAAG;QAAC;QAAY;KAAgB;IAEhC,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE;YACzB,IAAI,aAAkB,eAAe,OAAO,eAAe,EAAE;gBAC3D,OAAO,eAAe,CAAC,MAAM;gBAC7B,cAAc;YAChB;QACF;iDAAG,EAAE;IAEL,OAAO;QAAE;QAAO;QAAQ;QAAY;QAAa;IAAgB;AACnE;GA1EgB","debugId":null}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/ai/flows/medical-question-wolof.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent to answer medical questions in Wolof.\n *\n * - answerMedicalQuestionWolof - A function that handles the medical question answering process in Wolof.\n * - AnswerMedicalQuestionWolofInput - The input type for the answerMedicalQuestionWolof function.\n * - AnswerMedicalQuestionWolofOutput - The return type for the answerMedicalQuestionWolof function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnswerMedicalQuestionWolofInputSchema = z.object({\n  question: z.string().describe('The medical question asked in Wolof.'),\n});\nexport type AnswerMedicalQuestionWolofInput = z.infer<typeof AnswerMedicalQuestionWolofInputSchema>;\n\nconst AnswerMedicalQuestionWolofOutputSchema = z.object({\n  answer: z.string().describe('The answer to the medical question in Wolof.'),\n});\nexport type AnswerMedicalQuestionWolofOutput = z.infer<typeof AnswerMedicalQuestionWolofOutputSchema>;\n\nexport async function answerMedicalQuestionWolof(input: AnswerMedicalQuestionWolofInput): Promise<AnswerMedicalQuestionWolofOutput> {\n  return answerMedicalQuestionWolofFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'answerMedicalQuestionWolofPrompt',\n  input: {schema: AnswerMedicalQuestionWolofInputSchema},\n  output: {schema: AnswerMedicalQuestionWolofOutputSchema},\n  prompt: `You are a helpful AI assistant specializing in providing medical information in Wolof.\n  Answer the following medical question in Wolof:\\n\\n  {{question}}`,\n});\n\nconst answerMedicalQuestionWolofFlow = ai.defineFlow(\n  {\n    name: 'answerMedicalQuestionWolofFlow',\n    inputSchema: AnswerMedicalQuestionWolofInputSchema,\n    outputSchema: AnswerMedicalQuestionWolofOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;IAsBsB","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/ai/flows/medical-question-french.ts"],"sourcesContent":["// This is an autogenerated file from Firebase Studio.\n'use server';\n\n/**\n * @fileOverview A medical question answering AI agent that answers medical questions in French.\n *\n * - medicalQuestionFrench - A function that handles medical questions in French.\n * - MedicalQuestionFrenchInput - The input type for the medicalQuestionFrench function.\n * - MedicalQuestionFrenchOutput - The return type for the medicalQuestionFrench function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MedicalQuestionFrenchInputSchema = z.object({\n  question: z.string().describe('The medical question in French.'),\n});\nexport type MedicalQuestionFrenchInput = z.infer<typeof MedicalQuestionFrenchInputSchema>;\n\nconst MedicalQuestionFrenchOutputSchema = z.object({\n  answer: z.string().describe('The answer to the medical question in French.'),\n});\nexport type MedicalQuestionFrenchOutput = z.infer<typeof MedicalQuestionFrenchOutputSchema>;\n\nexport async function medicalQuestionFrench(input: MedicalQuestionFrenchInput): Promise<MedicalQuestionFrenchOutput> {\n  return medicalQuestionFrenchFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'medicalQuestionFrenchPrompt',\n  input: {schema: MedicalQuestionFrenchInputSchema},\n  output: {schema: MedicalQuestionFrenchOutputSchema},\n  prompt: `Tu es un chatbot médical qui répond aux questions médicales en français. Réponds à la question suivante de manière précise et concise.\\n\\nQuestion: {{{question}}}`,\n});\n\nconst medicalQuestionFrenchFlow = ai.defineFlow(\n  {\n    name: 'medicalQuestionFrenchFlow',\n    inputSchema: MedicalQuestionFrenchInputSchema,\n    outputSchema: MedicalQuestionFrenchOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;IAwBhC","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/ai/flows/medical-question-english.ts"],"sourcesContent":["// 'use server'\n'use server';\n/**\n * @fileOverview A medical question answering AI agent for English speakers.\n *\n * - medicalQuestionEnglish - A function that handles medical questions in English.\n * - MedicalQuestionEnglishInput - The input type for the medicalQuestionEnglish function.\n * - MedicalQuestionEnglishOutput - The return type for the medicalQuestionEnglish function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MedicalQuestionEnglishInputSchema = z.object({\n  question: z.string().describe('The medical question in English.'),\n});\nexport type MedicalQuestionEnglishInput = z.infer<typeof MedicalQuestionEnglishInputSchema>;\n\nconst MedicalQuestionEnglishOutputSchema = z.object({\n  answer: z.string().describe('The answer to the medical question in English.'),\n});\nexport type MedicalQuestionEnglishOutput = z.infer<typeof MedicalQuestionEnglishOutputSchema>;\n\nexport async function medicalQuestionEnglish(input: MedicalQuestionEnglishInput): Promise<MedicalQuestionEnglishOutput> {\n  return medicalQuestionEnglishFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'medicalQuestionEnglishPrompt',\n  input: {schema: MedicalQuestionEnglishInputSchema},\n  output: {schema: MedicalQuestionEnglishOutputSchema},\n  prompt: `You are a helpful AI assistant that answers medical questions in English. Please answer the following question accurately and provide helpful information.\\n\\nQuestion: {{{question}}}`,\n});\n\nconst medicalQuestionEnglishFlow = ai.defineFlow(\n  {\n    name: 'medicalQuestionEnglishFlow',\n    inputSchema: MedicalQuestionEnglishInputSchema,\n    outputSchema: MedicalQuestionEnglishOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,eAAe;;;;;;IAuBO","debugId":null}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/ai/flows/audio-medical-question.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A flow that takes audio input, transcribes it, and answers the medical question.\n *\n * - audioMedicalQuestion - A function that handles the audio transcription and question answering.\n * - AudioMedicalQuestionInput - The input type for the audioMedicalQuestion function.\n * - AudioMedicalQuestionOutput - The return type for the audioMedicalQuestion function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AudioMedicalQuestionInputSchema = z.object({\n  audioDataUri: z\n    .string()\n    .describe(\n      \"Audio data URI containing the user's medical question.  It must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type AudioMedicalQuestionInput = z.infer<typeof AudioMedicalQuestionInputSchema>;\n\nconst AudioMedicalQuestionOutputSchema = z.object({\n  transcription: z.string().describe('The transcription of the audio input.'),\n  answer: z.string().describe('The answer to the medical question.'),\n});\nexport type AudioMedicalQuestionOutput = z.infer<typeof AudioMedicalQuestionOutputSchema>;\n\nexport async function audioMedicalQuestion(input: AudioMedicalQuestionInput): Promise<AudioMedicalQuestionOutput> {\n  return audioMedicalQuestionFlow(input);\n}\n\nconst transcribeAudioPrompt = ai.definePrompt({\n  name: 'transcribeAudioPrompt',\n  input: {schema: AudioMedicalQuestionInputSchema},\n  output: {schema: z.object({transcription: z.string()})},\n  prompt: `Transcribe the following audio recording of a medical question: {{media url=audioDataUri}}`,\n});\n\nconst answerMedicalQuestionPrompt = ai.definePrompt({\n  name: 'answerMedicalQuestionPrompt',\n  input: {schema: z.object({question: z.string()})},\n  output: {schema: z.object({answer: z.string()})},\n  prompt: `Answer the following medical question: {{{question}}}`,\n});\n\nconst audioMedicalQuestionFlow = ai.defineFlow(\n  {\n    name: 'audioMedicalQuestionFlow',\n    inputSchema: AudioMedicalQuestionInputSchema,\n    outputSchema: AudioMedicalQuestionOutputSchema,\n  },\n  async input => {\n    const {output: transcriptionResult} = await transcribeAudioPrompt(input);\n    const transcription = transcriptionResult!.transcription;\n\n    const {output: answerResult} = await answerMedicalQuestionPrompt({question: transcription});\n    const answer = answerResult!.answer;\n\n    return {transcription, answer};\n  }\n);\n"],"names":[],"mappings":";;;;;IA2BsB","debugId":null}},
    {"offset": {"line": 772, "column": 0}, "map": {"version":3,"sources":["file:///home/user/stagingMediLingua/src/components/chat-client.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { FormEvent } from 'react';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Mic, Send, Bot, User, Volume2, Loader2, AlertTriangle } from 'lucide-react';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAudioRecorder } from '@/hooks/use-audio-recorder';\nimport { useSpeechSynthesis } from '@/hooks/use-speech-synthesis';\n\nimport { answerMedicalQuestionWolof } from '@/ai/flows/medical-question-wolof';\nimport { medicalQuestionFrench } from '@/ai/flows/medical-question-french';\nimport { medicalQuestionEnglish } from '@/ai/flows/medical-question-english';\nimport { audioMedicalQuestion } from '@/ai/flows/audio-medical-question';\n\ninterface Message {\n  id: string;\n  sender: 'user' | 'bot';\n  text?: string;\n  audioUrl?: string; // For user's recorded audio\n  language: Language;\n  isTyping?: boolean;\n  timestamp: Date;\n}\n\ntype Language = 'en' | 'fr' | 'wo';\n\nconst languageMap: Record<Language, string> = {\n  en: 'English',\n  fr: 'Français',\n  wo: 'Wolof',\n};\n\nconst languagePlaceholders: Record<Language, string> = {\n  en: 'Type your question in English...',\n  fr: 'Tapez votre question en Français...',\n  wo: 'Bindal sa laaj ci Wolof...',\n};\n\nexport function ChatClient() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState<Language>('en');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const { toast } = useToast();\n  const { isRecording, startRecording, stopRecording, audioDataUri, resetRecording } = useAudioRecorder();\n  const { speak, cancel, isSpeaking, isSupported: ttsSupported } = useSpeechSynthesis();\n\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n  const messageIdCounterRef = useRef(0); // To ensure unique message IDs\n\n  const scrollToBottom = useCallback(() => {\n    if (scrollAreaRef.current) {\n      const scrollViewport = scrollAreaRef.current.querySelector('div[data-radix-scroll-area-viewport]');\n      if (scrollViewport) {\n        scrollViewport.scrollTo({ top: scrollViewport.scrollHeight, behavior: 'smooth' });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  \n  const addMessage = (message: Omit<Message, 'id' | 'timestamp'>) => {\n    const uniqueId = `${Date.now()}-${messageIdCounterRef.current++}`;\n    setMessages(prev => [...prev, { ...message, id: uniqueId, timestamp: new Date() }]);\n  };\n\n  const handleTextSubmit = async (e?: FormEvent) => {\n    e?.preventDefault();\n    if (!inputValue.trim() || isLoading) return;\n\n    const userText = inputValue;\n    addMessage({ sender: 'user', text: userText, language: selectedLanguage });\n    setInputValue('');\n    setIsLoading(true);\n    setError(null);\n\n    addMessage({ sender: 'bot', isTyping: true, language: selectedLanguage });\n\n    try {\n      let response;\n      if (selectedLanguage === 'en') {\n        response = await medicalQuestionEnglish({ question: userText });\n      } else if (selectedLanguage === 'fr') {\n        response = await medicalQuestionFrench({ question: userText });\n      } else {\n        response = await answerMedicalQuestionWolof({ question: userText });\n      }\n      setMessages(prev => prev.filter(msg => !msg.isTyping));\n      addMessage({ sender: 'bot', text: response.answer, language: selectedLanguage });\n    } catch (err) {\n      console.error(\"Error processing text message:\", err);\n      const errorMessage = err instanceof Error ? err.message : \"An unknown error occurred.\";\n      setError(`Failed to get response: ${errorMessage}`);\n      setMessages(prev => prev.filter(msg => !msg.isTyping));\n      addMessage({ sender: 'bot', text: `Sorry, I couldn't process your request. ${errorMessage}`, language: selectedLanguage });\n      toast({\n        title: \"Error\",\n        description: `Failed to get response: ${errorMessage}`,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAudioSubmit = async () => {\n    if (!audioDataUri) {\n      toast({ title: \"Audio Error\", description: \"No audio data to submit.\", variant: \"destructive\" });\n      return;\n    }\n\n    addMessage({ sender: 'user', text: \"🎤 Processing audio...\", audioUrl: audioDataUri, language: selectedLanguage });\n    setIsLoading(true);\n    setError(null);\n    resetRecording(); // Reset audioDataUri after using it\n\n    addMessage({ sender: 'bot', isTyping: true, language: selectedLanguage });\n\n    try {\n      const { transcription } = await audioMedicalQuestion({ audioDataUri });\n      \n      // Update user message with transcription\n      setMessages(prev => prev.map(msg => \n        msg.audioUrl === audioDataUri && msg.sender === 'user' \n        ? { ...msg, text: `🎤 Transcription: \"${transcription}\"` } \n        : msg\n      ));\n      \n      let response;\n      if (selectedLanguage === 'en') {\n        response = await medicalQuestionEnglish({ question: transcription });\n      } else if (selectedLanguage === 'fr') {\n        response = await medicalQuestionFrench({ question: transcription });\n      } else {\n        response = await answerMedicalQuestionWolof({ question: transcription });\n      }\n      setMessages(prev => prev.filter(msg => !msg.isTyping));\n      addMessage({ sender: 'bot', text: response.answer, language: selectedLanguage });\n\n    } catch (err) {\n      console.error(\"Error processing audio message:\", err);\n      const errorMessage = err instanceof Error ? err.message : \"An unknown error occurred processing audio.\";\n      setError(`Audio processing failed: ${errorMessage}`);\n      setMessages(prev => prev.filter(msg => !msg.isTyping));\n      addMessage({ sender: 'bot', text: `Sorry, I couldn't process your audio. ${errorMessage}`, language: selectedLanguage });\n      toast({\n        title: \"Audio Processing Error\",\n        description: `Failed: ${errorMessage}`,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (audioDataUri && !isRecording) {\n      handleAudioSubmit();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [audioDataUri, isRecording]);\n\n\n  const toggleRecording = () => {\n    if (isRecording) {\n      stopRecording();\n      toast({ title: \"Recording Stopped\", description: \"Processing your audio...\" });\n    } else {\n      startRecording();\n      toast({ title: \"Recording Started\", description: \"Speak your question.\" });\n    }\n  };\n\n  const handleSpeak = (text: string, lang: Language) => {\n    if (isSpeaking) {\n      cancel();\n    }\n    if (!ttsSupported(lang)) {\n       toast({\n        title: \"TTS Not Supported\",\n        description: `Text-to-speech is not available for ${languageMap[lang]} in your browser.`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n    speak(text, lang);\n  };\n\n  return (\n    <Card className=\"flex flex-col w-full h-full shadow-2xl rounded-lg overflow-hidden border-primary/20 border-2\">\n      <CardHeader className=\"p-4 border-b bg-primary/10\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold text-primary\">AI Medical Assistant</h2>\n          <Select value={selectedLanguage} onValueChange={(value) => setSelectedLanguage(value as Language)}>\n            <SelectTrigger className=\"w-[180px] bg-background shadow-sm\">\n              <SelectValue placeholder=\"Select language\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"en\">English</SelectItem>\n              <SelectItem value=\"fr\">Français</SelectItem>\n              <SelectItem value=\"wo\">Wolof</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </CardHeader>\n      <ScrollArea className=\"flex-grow p-4 bg-background\" ref={scrollAreaRef}>\n        <div className=\"space-y-4\">\n          {messages.map((msg) => (\n            <div key={msg.id} className={`flex animate-fadeIn ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\n              <div className={`flex items-end gap-2 max-w-[75%] ${msg.sender === 'user' ? 'flex-row-reverse' : ''}`}>\n                <Avatar className=\"w-8 h-8 shadow-sm\">\n                  <AvatarImage src={msg.sender === 'bot' ? '/bot-avatar.png' : '/user-avatar.png'} alt={msg.sender} />\n                  <AvatarFallback className=\"bg-muted-foreground text-muted\">\n                    {msg.sender === 'bot' ? <Bot size={18} /> : <User size={18} />}\n                  </AvatarFallback>\n                </Avatar>\n                <div\n                  className={`p-3 rounded-xl shadow-md ${\n                    msg.sender === 'user'\n                      ? 'bg-primary text-primary-foreground rounded-br-none'\n                      : 'bg-card text-card-foreground border border-border rounded-bl-none'\n                  }`}\n                >\n                  {msg.isTyping ? (\n                     <div className=\"flex items-center space-x-1\">\n                        <span className=\"w-2 h-2 bg-muted-foreground rounded-full animate-pulse delay-0\"></span>\n                        <span className=\"w-2 h-2 bg-muted-foreground rounded-full animate-pulse delay-150\"></span>\n                        <span className=\"w-2 h-2 bg-muted-foreground rounded-full animate-pulse delay-300\"></span>\n                    </div>\n                  ) : (\n                    <>\n                      {msg.text && <p className=\"text-sm whitespace-pre-wrap\">{msg.text}</p>}\n                      {msg.audioUrl && msg.sender === 'user' && (\n                        <audio controls src={msg.audioUrl} className=\"mt-2 w-full max-w-xs h-10\" />\n                      )}\n                      {msg.sender === 'bot' && msg.text && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          className=\"mt-1 h-7 w-7 text-muted-foreground hover:text-primary\"\n                          onClick={() => handleSpeak(msg.text!, msg.language)}\n                          disabled={isSpeaking || !ttsSupported(msg.language)}\n                          title={ttsSupported(msg.language) ? \"Speak this message\" : `TTS not supported for ${languageMap[msg.language]}`}\n                        >\n                          <Volume2 size={16} />\n                        </Button>\n                      )}\n                       <p className=\"text-xs mt-1 opacity-70 text-right\">\n                        {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                      </p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n          {error && (\n            <div className=\"flex justify-start animate-fadeIn\">\n               <div className=\"flex items-center gap-2 p-3 rounded-lg bg-destructive/10 text-destructive border border-destructive max-w-[75%]\">\n                <AlertTriangle size={20} />\n                <p className=\"text-sm\">{error}</p>\n               </div>\n            </div>\n          )}\n        </div>\n      </ScrollArea>\n      <CardContent className=\"p-4 border-t bg-primary/5\">\n        <form onSubmit={handleTextSubmit} className=\"flex items-center gap-2\">\n          <Input\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            placeholder={languagePlaceholders[selectedLanguage]}\n            className=\"flex-grow text-base shadow-sm focus-visible:ring-primary\"\n            disabled={isLoading}\n          />\n          <Button type=\"submit\" size=\"icon\" disabled={isLoading || !inputValue.trim()} className=\"shadow-md\" title=\"Send message\">\n            {isLoading && messages.some(m => m.sender === 'user' && !m.audioUrl) ? <Loader2 className=\"animate-spin\" size={20} /> : <Send size={20} />}\n          </Button>\n          <Button type=\"button\" size=\"icon\" onClick={toggleRecording} variant={isRecording ? \"destructive\" : \"outline\"} className=\"shadow-md\" title={isRecording ? \"Stop recording\" : \"Start recording\"}>\n             {isRecording ? <Loader2 className=\"animate-spin\" size={20} /> : <Mic size={20} />}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}